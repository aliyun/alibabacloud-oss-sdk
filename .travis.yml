jobs:
  include:
    - language: node_js
      node_js: 12
      if: branch = master
      script:
        - cd baseclient/ts
        - npm install
        - npm run test-cov
      after_success:
        - bash <(curl -s https://codecov.io/bash) -cF node_js
    # - language: node_js
    #   node_js: 12
    #   script:
    #     - cd ts
    #     - npm install
    #     - rm -rf node_modules/@alicloud/oss-baseclient
    #     - npm run test
    - language: go
      go: 1.12.x
      if: branch = master
      script:
        - cd baseclient/go
        - export GO111MODULE=on
        - go mod tidy
        - go test -race -coverprofile=coverage.txt -covermode=atomic ./service/... ./utils...
        - cd ../../golang
        - go mod tidy
        - test -z $ACCESS_KEY_ID -a -z $ACCESS_KEY_SECRET || go test -race ./client/...
      after_success:
        - bash <(curl -s https://codecov.io/bash) -cF go
    - language: java
      jdk: openjdk8
      if: branch = master
      script:
        - cd baseclient/java
        - mvn test -B
      after_success:
        - bash <(curl -s https://codecov.io/bash) -cF java
    - language: csharp
      mono: none
      dist: xenial
      branches:
        only:
          - master
      before_install:
        - wget https://download.visualstudio.microsoft.com/download/pr/42f39f2f-3f24-4340-8c57-0a3133620c21/0a353696275b00cbddc9f60069867cfc/dotnet-sdk-2.2.110-linux-x64.tar.gz
        - mkdir -p ~/dotnet/ && tar zxf dotnet-sdk-2.2.110-linux-x64.tar.gz -C ~/dotnet/
        - sudo ln -sf ~/dotnet/dotnet /usr/bin/dotnet
        - dotnet --info
      install:
        - cd baseclient/csharp/unitTest
        - dotnet tool install --global altcover.visualizer
        - dotnet restore
        - dotnet build
        - cd ../
      script:
        - dotnet test unitTest/ /p:AltCover=true
      after_success:
        - bash <(curl -s https://codecov.io/bash) -cF csharp
